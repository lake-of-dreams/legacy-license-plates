# Copyright 2017, Oracle Corporation and/or affiliates.  All rights reserved.

box:
   id: golang

build:

  box:
    id: quay.io/ravi_r_singhal/weblogic-with-root
    username: $QUAY_IO_USERNAME
    password: $QUAY_IO_PASSWORD
    tag: 12.2.1.2

  steps:
    - script:
       name: "Create and Copy Application war" 
       code: | 
         echo "Install Maven"
         yum install -y wget
         wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
         sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
         yum install -y apache-maven
         mvn clean install
         cp target/licenseplates.war /u01/oracle/.
         yum -y install dos2unix nc
    - markxnelson/weblogic-step@0.1.24:
        name: "Setup weblogic domain" 
        config: weblogic-config.json
    - script:
        name: "Copy the DDL and entrypoint scripts into place"
        code: |
          cp $WERCKER_SOURCE_DIR/create-users.sql /u01/oracle/create-users.sql
          cp $WERCKER_SOURCE_DIR/create-schema.sql /u01/oracle/create-schema.sql
          cp $WERCKER_SOURCE_DIR/entrypoint.sh /u01/oracle/entrypoint.sh
          chmod 777  /u01/oracle/entrypoint.sh
          chmod 777  /u01/oracle/*.sql
          dos2unix /u01/oracle/entrypoint.sh
          ls -lahrt /u01/oracle
    - internal/docker-push:
        name: "Push the updated container as staged image(licenseplates-stage)"
        username: $QUAY_IO_USERNAME
        password: $QUAY_IO_PASSWORD
        repository: quay.io/ravi_r_singhal/weblogic
        tag: licenseplates-stage
        ports: "7001"
        entrypoint: "/u01/oracle/entrypoint.sh"
        user: root
        
test:

  steps:
    - kubectl:
       name: "Delete any existing secrets for quay and docker store registries in TEST environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true secret quaysecret storesecret          
    - kubectl:
       name: "Delete any existing weblogic and database deployments in TEST  environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true -f database-deployment.yaml -f weblogic-deployment.yaml
    - kubectl:
       name: "Delete any existing weblogic load-balancer in TEST environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true svc weblogic-load-balancer
    - script:
       name: "Wait for some time for clean up"
       code: |
         sleep 30
    - kubectl:
       name: "Create secret for quay registry in TEST environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: create secret docker-registry quaysecret --docker-server=quay.io --docker-username=$QUAY_IO_USERNAME --docker-password=$QUAY_IO_PASSWORD --docker-email=$QUAY_IO_EMAIL
    - kubectl:
       name: "Create secret for docker store registry in TEST environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: create secret docker-registry storesecret --docker-username=$DOCKER_STORE_USER --docker-password=$DOCKER_STORE_PASSWORD --docker-email=$DOCKER_STORE_EMAIL     
    - kubectl:
       name: "Create weblogic and database deployments in TEST  environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: create -f database-deployment.yaml -f weblogic-deployment.yaml
    - kubectl:
       name: "Create load-balancer for weblogic in TEST  environment"
       server: $KUBERNETES_MASTER_TEST
       username: $KUBERNETES_USERNAME_TEST
       password: $KUBERNETES_PASSWORD_TEST
       insecure-skip-tls-verify: true
       command: expose deployment weblogic --type=LoadBalancer --name=weblogic-load-balancer --external-ip=$WEBLOGIC_HOST_TEST --load-balancer-ip=$WEBLOGIC_HOST_TEST
    - script:
       name: "Wait for application to be available"
       code: |
         export WEBLOGIC_HOST=$WEBLOGIC_HOST_TEST
         sleep 20
         until $(curl --output /dev/null --silent --head --fail http://$WEBLOGIC_HOST:7001/licenseplates/rest/plates/list); do
           printf '.'
           sleep 5
         done
    - script:
       name: "Run test cases"
       code: |
         go run main.go
deploy:

  steps:          
    - blendle/publish-quay-tag:
        name: "Tag staged and tested image (licenseplates-stage) to prod tag(licenseplates-prod)"
        token: $QUAY_IO_TOKEN
        repository: ravi_r_singhal/weblogic
        current: licenseplates-stage
        tag: licenseplates-prod
    - kubectl:
       name: "Delete any existing secrets for quay and docker store registries in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true secret quaysecret storesecret    
    - kubectl:
       name: "Delete any existing weblogic and database deployments in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true -f database-deployment.yaml -f weblogic-deployment-prod.yaml
    - kubectl:
       name: "Delete any existing weblogic load-balancer in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: delete --ignore-not-found=true svc weblogic-load-balancer
    - script:
       name: "Sleep for some time for clean up"
       code: |
         sleep 30
    - kubectl:
       name: "Create secret for quay registry in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: create secret docker-registry quaysecret --docker-server=quay.io --docker-username=$QUAY_IO_USERNAME --docker-password=$QUAY_IO_PASSWORD --docker-email=$QUAY_IO_EMAIL
    - kubectl:
       name: "Create secret for docker store registry in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: create secret docker-registry storesecret --docker-username=$DOCKER_STORE_USER --docker-password=$DOCKER_STORE_PASSWORD --docker-email=$DOCKER_STORE_EMAIL     
    - kubectl:
       name: "Create weblogic and database deployments in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: create -f database-deployment.yaml -f weblogic-deployment-prod.yaml
    - kubectl:
       name: "Create load-balancer for weblogic in PROD environment"
       server: $KUBERNETES_MASTER_PROD
       username: $KUBERNETES_USERNAME_PROD
       password: $KUBERNETES_PASSWORD_PROD
       insecure-skip-tls-verify: true
       command: expose deployment weblogic --type=LoadBalancer --name=weblogic-load-balancer --external-ip=$WEBLOGIC_HOST_PROD --load-balancer-ip=$WEBLOGIC_HOST_PROD
    - script:
       name: "Sanity Check Production"
       code: |
         export WEBLOGIC_HOST=$WEBLOGIC_HOST_PROD
         sleep 20
         until $(curl --output /dev/null --silent --head --fail http://$WEBLOGIC_HOST:7001/licenseplates/rest/plates/list); do
           printf '.'
           sleep 5
         done
